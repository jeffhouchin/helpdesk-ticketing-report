name: Daily Helpdesk Intelligence

on:
  schedule:
    # Run every weekday at 6:30 AM EST (11:30 UTC)
    - cron: '30 11 * * 1-5'
  workflow_dispatch: # Allow manual trigger
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no emails sent)'
        required: false
        default: false
        type: boolean

jobs:
  daily-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download latest ticket data
      env:
        # Add your CSV download logic here
        # This could be SharePoint API, FTP, or manual upload
        SHAREPOINT_CLIENT_ID: ${{ secrets.SHAREPOINT_CLIENT_ID }}
        SHAREPOINT_CLIENT_SECRET: ${{ secrets.SHAREPOINT_CLIENT_SECRET }}
        SHAREPOINT_SITE_URL: ${{ secrets.SHAREPOINT_SITE_URL }}
      run: |
        # Download today's CSV file
        # For now, assuming CSV is manually uploaded or available
        echo "CSV download would happen here"
        
        # Create a sample file if none exists (for testing)
        if [ ! -f "Ticket_Data_$(date +%Y-%m-%d).csv" ]; then
          echo "Using existing test data"
        fi

    - name: Run Daily Intelligence Analysis
      env:
        # Email Configuration
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        FROM_NAME: "Helpdesk AI Assistant"
        
        # Recipients
        SUPERVISOR_EMAIL: ${{ secrets.SUPERVISOR_EMAIL }}
        
        # Analysis Configuration
        STALE_TICKET_DAYS: 3
        STUCK_TICKET_DAYS: 14
        PERFORMANCE_SAMPLE_RATE: 0.10
        
        # Dry run mode
        DRY_RUN: ${{ github.event.inputs.dry_run }}
      
      run: |
        if [ "$DRY_RUN" = "true" ]; then
          npm run daily-analysis -- --dry-run
        else
          npm run daily-analysis
        fi

    - name: Upload analysis logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: daily-analysis-logs-${{ github.run_id }}
        path: |
          logs/
          *.log
        retention-days: 7

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      env:
        SUPERVISOR_EMAIL: ${{ secrets.SUPERVISOR_EMAIL }}
      with:
        script: |
          const nodemailer = require('nodemailer');
          
          // Send failure notification
          const transporter = nodemailer.createTransporter({
            host: process.env.SMTP_HOST,
            port: process.env.SMTP_PORT,
            secure: false,
            auth: {
              user: process.env.SMTP_USER,
              pass: process.env.SMTP_PASS
            }
          });
          
          await transporter.sendMail({
            from: process.env.FROM_EMAIL,
            to: process.env.SUPERVISOR_EMAIL,
            subject: 'ðŸš¨ Daily Helpdesk Analysis Failed - GitHub Actions',
            html: `
              <h2>Daily Analysis Failure</h2>
              <p><strong>Repository:</strong> ${{ github.repository }}</p>
              <p><strong>Run ID:</strong> ${{ github.run_id }}</p>
              <p><strong>Time:</strong> ${new Date().toLocaleString()}</p>
              <p><strong>View Run:</strong> <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">GitHub Actions</a></p>
              <p>Please check the GitHub Actions logs for details.</p>
            `
          });

  # Additional job for weekend summary (optional)
  weekend-summary:
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 12 * * 1' # Monday at noon
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate weekend summary
      run: |
        echo "Weekend summary generation would go here"
        # This could analyze Friday's data and weekend emergency tickets